// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: proto/fedemail/v1/fedemail.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Label_Type int32

const (
	Label_SYSTEM Label_Type = 0
	Label_USER   Label_Type = 1
)

// Enum value maps for Label_Type.
var (
	Label_Type_name = map[int32]string{
		0: "SYSTEM",
		1: "USER",
	}
	Label_Type_value = map[string]int32{
		"SYSTEM": 0,
		"USER":   1,
	}
)

func (x Label_Type) Enum() *Label_Type {
	p := new(Label_Type)
	*p = x
	return p
}

func (x Label_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Label_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_fedemail_v1_fedemail_proto_enumTypes[0].Descriptor()
}

func (Label_Type) Type() protoreflect.EnumType {
	return &file_proto_fedemail_v1_fedemail_proto_enumTypes[0]
}

func (x Label_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Label_Type.Descriptor instead.
func (Label_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{3, 0}
}

type BatchDeleteMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *BatchDeleteMessagesRequest) Reset() {
	*x = BatchDeleteMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDeleteMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteMessagesRequest) ProtoMessage() {}

func (x *BatchDeleteMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteMessagesRequest.ProtoReflect.Descriptor instead.
func (*BatchDeleteMessagesRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{0}
}

func (x *BatchDeleteMessagesRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type BatchModifyMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddLabelIds    []string `protobuf:"bytes,1,rep,name=add_label_ids,json=addLabelIds,proto3" json:"add_label_ids,omitempty"`
	Ids            []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	RemoveLabelIds []string `protobuf:"bytes,3,rep,name=remove_label_ids,json=removeLabelIds,proto3" json:"remove_label_ids,omitempty"`
}

func (x *BatchModifyMessagesRequest) Reset() {
	*x = BatchModifyMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchModifyMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchModifyMessagesRequest) ProtoMessage() {}

func (x *BatchModifyMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchModifyMessagesRequest.ProtoReflect.Descriptor instead.
func (*BatchModifyMessagesRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{1}
}

func (x *BatchModifyMessagesRequest) GetAddLabelIds() []string {
	if x != nil {
		return x.AddLabelIds
	}
	return nil
}

func (x *BatchModifyMessagesRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *BatchModifyMessagesRequest) GetRemoveLabelIds() []string {
	if x != nil {
		return x.RemoveLabelIds
	}
	return nil
}

type Draft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message *Message `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Draft) Reset() {
	*x = Draft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Draft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Draft) ProtoMessage() {}

func (x *Draft) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Draft.ProtoReflect.Descriptor instead.
func (*Draft) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{2}
}

func (x *Draft) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Draft) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type Label struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type Label_Type `protobuf:"varint,3,opt,name=type,proto3,enum=fedemail.Label_Type" json:"type,omitempty"`
}

func (x *Label) Reset() {
	*x = Label{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Label) ProtoMessage() {}

func (x *Label) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Label.ProtoReflect.Descriptor instead.
func (*Label) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{3}
}

func (x *Label) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Label) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Label) GetType() Label_Type {
	if x != nil {
		return x.Type
	}
	return Label_SYSTEM
}

type ListDraftsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Drafts []*Draft `protobuf:"bytes,1,rep,name=drafts,proto3" json:"drafts,omitempty"`
}

func (x *ListDraftsResponse) Reset() {
	*x = ListDraftsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDraftsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDraftsResponse) ProtoMessage() {}

func (x *ListDraftsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDraftsResponse.ProtoReflect.Descriptor instead.
func (*ListDraftsResponse) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{4}
}

func (x *ListDraftsResponse) GetDrafts() []*Draft {
	if x != nil {
		return x.Drafts
	}
	return nil
}

type ListLabelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels []*Label `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *ListLabelsResponse) Reset() {
	*x = ListLabelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLabelsResponse) ProtoMessage() {}

func (x *ListLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLabelsResponse.ProtoReflect.Descriptor instead.
func (*ListLabelsResponse) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{5}
}

func (x *ListLabelsResponse) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *ListMessagesResponse) Reset() {
	*x = ListMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMessagesResponse) ProtoMessage() {}

func (x *ListMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMessagesResponse.ProtoReflect.Descriptor instead.
func (*ListMessagesResponse) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{6}
}

func (x *ListMessagesResponse) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type ListThreadsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threads []*Thread `protobuf:"bytes,1,rep,name=threads,proto3" json:"threads,omitempty"`
}

func (x *ListThreadsResponse) Reset() {
	*x = ListThreadsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListThreadsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListThreadsResponse) ProtoMessage() {}

func (x *ListThreadsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListThreadsResponse.ProtoReflect.Descriptor instead.
func (*ListThreadsResponse) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{7}
}

func (x *ListThreadsResponse) GetThreads() []*Thread {
	if x != nil {
		return x.Threads
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimelineId   string       `protobuf:"bytes,1,opt,name=timeline_id,json=timelineId,proto3" json:"timeline_id,omitempty"`
	Id           string       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	InternalDate string       `protobuf:"bytes,3,opt,name=internal_date,json=internalDate,proto3" json:"internal_date,omitempty"`
	LabelIds     []string     `protobuf:"bytes,4,rep,name=label_ids,json=labelIds,proto3" json:"label_ids,omitempty"`
	Payload      *MessagePart `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	Raw          string       `protobuf:"bytes,6,opt,name=raw,proto3" json:"raw,omitempty"`
	Snippet      string       `protobuf:"bytes,7,opt,name=snippet,proto3" json:"snippet,omitempty"`
	ThreadId     string       `protobuf:"bytes,8,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{8}
}

func (x *Message) GetTimelineId() string {
	if x != nil {
		return x.TimelineId
	}
	return ""
}

func (x *Message) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Message) GetInternalDate() string {
	if x != nil {
		return x.InternalDate
	}
	return ""
}

func (x *Message) GetLabelIds() []string {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

func (x *Message) GetPayload() *MessagePart {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Message) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

func (x *Message) GetSnippet() string {
	if x != nil {
		return x.Snippet
	}
	return ""
}

func (x *Message) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

type MessagePart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body     *MessagePartBody     `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	Filename string               `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Headers  []*MessagePartHeader `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty"`
	MimeType string               `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	PartId   string               `protobuf:"bytes,5,opt,name=part_id,json=partId,proto3" json:"part_id,omitempty"`
	Parts    []*MessagePart       `protobuf:"bytes,6,rep,name=parts,proto3" json:"parts,omitempty"`
}

func (x *MessagePart) Reset() {
	*x = MessagePart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagePart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagePart) ProtoMessage() {}

func (x *MessagePart) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagePart.ProtoReflect.Descriptor instead.
func (*MessagePart) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{9}
}

func (x *MessagePart) GetBody() *MessagePartBody {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *MessagePart) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *MessagePart) GetHeaders() []*MessagePartHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *MessagePart) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *MessagePart) GetPartId() string {
	if x != nil {
		return x.PartId
	}
	return ""
}

func (x *MessagePart) GetParts() []*MessagePart {
	if x != nil {
		return x.Parts
	}
	return nil
}

type MessagePartBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttachmentId string `protobuf:"bytes,1,opt,name=attachment_id,json=attachmentId,proto3" json:"attachment_id,omitempty"`
	Data         string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Size         int32  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *MessagePartBody) Reset() {
	*x = MessagePartBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagePartBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagePartBody) ProtoMessage() {}

func (x *MessagePartBody) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagePartBody.ProtoReflect.Descriptor instead.
func (*MessagePartBody) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{10}
}

func (x *MessagePartBody) GetAttachmentId() string {
	if x != nil {
		return x.AttachmentId
	}
	return ""
}

func (x *MessagePartBody) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *MessagePartBody) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type MessagePartHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MessagePartHeader) Reset() {
	*x = MessagePartHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagePartHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagePartHeader) ProtoMessage() {}

func (x *MessagePartHeader) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagePartHeader.ProtoReflect.Descriptor instead.
func (*MessagePartHeader) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{11}
}

func (x *MessagePartHeader) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessagePartHeader) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ModifyMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddLabelIds    []string `protobuf:"bytes,1,rep,name=add_label_ids,json=addLabelIds,proto3" json:"add_label_ids,omitempty"`
	RemoveLabelIds []string `protobuf:"bytes,2,rep,name=remove_label_ids,json=removeLabelIds,proto3" json:"remove_label_ids,omitempty"`
}

func (x *ModifyMessageRequest) Reset() {
	*x = ModifyMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyMessageRequest) ProtoMessage() {}

func (x *ModifyMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyMessageRequest.ProtoReflect.Descriptor instead.
func (*ModifyMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{12}
}

func (x *ModifyMessageRequest) GetAddLabelIds() []string {
	if x != nil {
		return x.AddLabelIds
	}
	return nil
}

func (x *ModifyMessageRequest) GetRemoveLabelIds() []string {
	if x != nil {
		return x.RemoveLabelIds
	}
	return nil
}

type ModifyThreadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddLabelIds    []string `protobuf:"bytes,1,rep,name=add_label_ids,json=addLabelIds,proto3" json:"add_label_ids,omitempty"`
	RemoveLabelIds []string `protobuf:"bytes,2,rep,name=remove_label_ids,json=removeLabelIds,proto3" json:"remove_label_ids,omitempty"`
}

func (x *ModifyThreadRequest) Reset() {
	*x = ModifyThreadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyThreadRequest) ProtoMessage() {}

func (x *ModifyThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyThreadRequest.ProtoReflect.Descriptor instead.
func (*ModifyThreadRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{13}
}

func (x *ModifyThreadRequest) GetAddLabelIds() []string {
	if x != nil {
		return x.AddLabelIds
	}
	return nil
}

func (x *ModifyThreadRequest) GetRemoveLabelIds() []string {
	if x != nil {
		return x.RemoveLabelIds
	}
	return nil
}

type Thread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimelineId string     `protobuf:"bytes,1,opt,name=timeline_id,json=timelineId,proto3" json:"timeline_id,omitempty"`
	Id         string     `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Messages   []*Message `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
	Snippet    string     `protobuf:"bytes,4,opt,name=snippet,proto3" json:"snippet,omitempty"`
}

func (x *Thread) Reset() {
	*x = Thread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Thread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Thread) ProtoMessage() {}

func (x *Thread) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Thread.ProtoReflect.Descriptor instead.
func (*Thread) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{14}
}

func (x *Thread) GetTimelineId() string {
	if x != nil {
		return x.TimelineId
	}
	return ""
}

func (x *Thread) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Thread) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *Thread) GetSnippet() string {
	if x != nil {
		return x.Snippet
	}
	return ""
}

type DraftsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxResults int64 `protobuf:"varint,1,opt,name=max_results,json=maxResults,proto3" json:"max_results,omitempty"`
}

func (x *DraftsListRequest) Reset() {
	*x = DraftsListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DraftsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DraftsListRequest) ProtoMessage() {}

func (x *DraftsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DraftsListRequest.ProtoReflect.Descriptor instead.
func (*DraftsListRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{15}
}

func (x *DraftsListRequest) GetMaxResults() int64 {
	if x != nil {
		return x.MaxResults
	}
	return 0
}

type DraftsCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageRaw *Draft `protobuf:"bytes,1,opt,name=message_raw,json=messageRaw,proto3" json:"message_raw,omitempty"`
}

func (x *DraftsCreateRequest) Reset() {
	*x = DraftsCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DraftsCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DraftsCreateRequest) ProtoMessage() {}

func (x *DraftsCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DraftsCreateRequest.ProtoReflect.Descriptor instead.
func (*DraftsCreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{16}
}

func (x *DraftsCreateRequest) GetMessageRaw() *Draft {
	if x != nil {
		return x.MessageRaw
	}
	return nil
}

type DraftsSendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageRaw *Draft `protobuf:"bytes,1,opt,name=message_raw,json=messageRaw,proto3" json:"message_raw,omitempty"`
}

func (x *DraftsSendRequest) Reset() {
	*x = DraftsSendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DraftsSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DraftsSendRequest) ProtoMessage() {}

func (x *DraftsSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DraftsSendRequest.ProtoReflect.Descriptor instead.
func (*DraftsSendRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{17}
}

func (x *DraftsSendRequest) GetMessageRaw() *Draft {
	if x != nil {
		return x.MessageRaw
	}
	return nil
}

type DraftsGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DraftsGetRequest) Reset() {
	*x = DraftsGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DraftsGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DraftsGetRequest) ProtoMessage() {}

func (x *DraftsGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DraftsGetRequest.ProtoReflect.Descriptor instead.
func (*DraftsGetRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{18}
}

func (x *DraftsGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DraftsUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MessageRaw *Draft `protobuf:"bytes,2,opt,name=message_raw,json=messageRaw,proto3" json:"message_raw,omitempty"`
}

func (x *DraftsUpdateRequest) Reset() {
	*x = DraftsUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DraftsUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DraftsUpdateRequest) ProtoMessage() {}

func (x *DraftsUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DraftsUpdateRequest.ProtoReflect.Descriptor instead.
func (*DraftsUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{19}
}

func (x *DraftsUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DraftsUpdateRequest) GetMessageRaw() *Draft {
	if x != nil {
		return x.MessageRaw
	}
	return nil
}

type DraftsDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DraftsDeleteRequest) Reset() {
	*x = DraftsDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DraftsDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DraftsDeleteRequest) ProtoMessage() {}

func (x *DraftsDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DraftsDeleteRequest.ProtoReflect.Descriptor instead.
func (*DraftsDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{20}
}

func (x *DraftsDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type LabelsCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label *Label `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *LabelsCreateRequest) Reset() {
	*x = LabelsCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelsCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelsCreateRequest) ProtoMessage() {}

func (x *LabelsCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelsCreateRequest.ProtoReflect.Descriptor instead.
func (*LabelsCreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{21}
}

func (x *LabelsCreateRequest) GetLabel() *Label {
	if x != nil {
		return x.Label
	}
	return nil
}

type LabelsGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *LabelsGetRequest) Reset() {
	*x = LabelsGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelsGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelsGetRequest) ProtoMessage() {}

func (x *LabelsGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelsGetRequest.ProtoReflect.Descriptor instead.
func (*LabelsGetRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{22}
}

func (x *LabelsGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type LabelsUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Label *Label `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *LabelsUpdateRequest) Reset() {
	*x = LabelsUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelsUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelsUpdateRequest) ProtoMessage() {}

func (x *LabelsUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelsUpdateRequest.ProtoReflect.Descriptor instead.
func (*LabelsUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{23}
}

func (x *LabelsUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LabelsUpdateRequest) GetLabel() *Label {
	if x != nil {
		return x.Label
	}
	return nil
}

type LabelsDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *LabelsDeleteRequest) Reset() {
	*x = LabelsDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelsDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelsDeleteRequest) ProtoMessage() {}

func (x *LabelsDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelsDeleteRequest.ProtoReflect.Descriptor instead.
func (*LabelsDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{24}
}

func (x *LabelsDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type LabelsPatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Label *Label `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *LabelsPatchRequest) Reset() {
	*x = LabelsPatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelsPatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelsPatchRequest) ProtoMessage() {}

func (x *LabelsPatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelsPatchRequest.ProtoReflect.Descriptor instead.
func (*LabelsPatchRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{25}
}

func (x *LabelsPatchRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LabelsPatchRequest) GetLabel() *Label {
	if x != nil {
		return x.Label
	}
	return nil
}

type MessagesListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelIds   []string `protobuf:"bytes,1,rep,name=label_ids,json=labelIds,proto3" json:"label_ids,omitempty"`
	MaxResults int64    `protobuf:"varint,2,opt,name=max_results,json=maxResults,proto3" json:"max_results,omitempty"`
}

func (x *MessagesListRequest) Reset() {
	*x = MessagesListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesListRequest) ProtoMessage() {}

func (x *MessagesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesListRequest.ProtoReflect.Descriptor instead.
func (*MessagesListRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{26}
}

func (x *MessagesListRequest) GetLabelIds() []string {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

func (x *MessagesListRequest) GetMaxResults() int64 {
	if x != nil {
		return x.MaxResults
	}
	return 0
}

type MessagesBatchDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchDeleteMessagesRequest *BatchDeleteMessagesRequest `protobuf:"bytes,1,opt,name=batch_delete_messages_request,json=batchDeleteMessagesRequest,proto3" json:"batch_delete_messages_request,omitempty"`
}

func (x *MessagesBatchDeleteRequest) Reset() {
	*x = MessagesBatchDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesBatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesBatchDeleteRequest) ProtoMessage() {}

func (x *MessagesBatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesBatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*MessagesBatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{27}
}

func (x *MessagesBatchDeleteRequest) GetBatchDeleteMessagesRequest() *BatchDeleteMessagesRequest {
	if x != nil {
		return x.BatchDeleteMessagesRequest
	}
	return nil
}

type MessagesBatchModifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchModifyMessagesRequest *BatchModifyMessagesRequest `protobuf:"bytes,1,opt,name=batch_modify_messages_request,json=batchModifyMessagesRequest,proto3" json:"batch_modify_messages_request,omitempty"`
}

func (x *MessagesBatchModifyRequest) Reset() {
	*x = MessagesBatchModifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesBatchModifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesBatchModifyRequest) ProtoMessage() {}

func (x *MessagesBatchModifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesBatchModifyRequest.ProtoReflect.Descriptor instead.
func (*MessagesBatchModifyRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{28}
}

func (x *MessagesBatchModifyRequest) GetBatchModifyMessagesRequest() *BatchModifyMessagesRequest {
	if x != nil {
		return x.BatchModifyMessagesRequest
	}
	return nil
}

type MessagesSendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageRaw *Message `protobuf:"bytes,1,opt,name=message_raw,json=messageRaw,proto3" json:"message_raw,omitempty"`
}

func (x *MessagesSendRequest) Reset() {
	*x = MessagesSendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesSendRequest) ProtoMessage() {}

func (x *MessagesSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesSendRequest.ProtoReflect.Descriptor instead.
func (*MessagesSendRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{29}
}

func (x *MessagesSendRequest) GetMessageRaw() *Message {
	if x != nil {
		return x.MessageRaw
	}
	return nil
}

type MessagesGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MessagesGetRequest) Reset() {
	*x = MessagesGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesGetRequest) ProtoMessage() {}

func (x *MessagesGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesGetRequest.ProtoReflect.Descriptor instead.
func (*MessagesGetRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{30}
}

func (x *MessagesGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MessagesDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MessagesDeleteRequest) Reset() {
	*x = MessagesDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesDeleteRequest) ProtoMessage() {}

func (x *MessagesDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesDeleteRequest.ProtoReflect.Descriptor instead.
func (*MessagesDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{31}
}

func (x *MessagesDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MessagesModifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ModifyMessageRequest *ModifyMessageRequest `protobuf:"bytes,2,opt,name=modify_message_request,json=modifyMessageRequest,proto3" json:"modify_message_request,omitempty"`
}

func (x *MessagesModifyRequest) Reset() {
	*x = MessagesModifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesModifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesModifyRequest) ProtoMessage() {}

func (x *MessagesModifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesModifyRequest.ProtoReflect.Descriptor instead.
func (*MessagesModifyRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{32}
}

func (x *MessagesModifyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MessagesModifyRequest) GetModifyMessageRequest() *ModifyMessageRequest {
	if x != nil {
		return x.ModifyMessageRequest
	}
	return nil
}

type MessagesTrashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MessagesTrashRequest) Reset() {
	*x = MessagesTrashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesTrashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesTrashRequest) ProtoMessage() {}

func (x *MessagesTrashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesTrashRequest.ProtoReflect.Descriptor instead.
func (*MessagesTrashRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{33}
}

func (x *MessagesTrashRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MessagesUntrashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MessagesUntrashRequest) Reset() {
	*x = MessagesUntrashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesUntrashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesUntrashRequest) ProtoMessage() {}

func (x *MessagesUntrashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesUntrashRequest.ProtoReflect.Descriptor instead.
func (*MessagesUntrashRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{34}
}

func (x *MessagesUntrashRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MessagesAttachmentsGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MessagesAttachmentsGetRequest) Reset() {
	*x = MessagesAttachmentsGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesAttachmentsGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesAttachmentsGetRequest) ProtoMessage() {}

func (x *MessagesAttachmentsGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesAttachmentsGetRequest.ProtoReflect.Descriptor instead.
func (*MessagesAttachmentsGetRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{35}
}

func (x *MessagesAttachmentsGetRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MessagesAttachmentsGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ThreadsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelIds   []string `protobuf:"bytes,1,rep,name=label_ids,json=labelIds,proto3" json:"label_ids,omitempty"`
	MaxResults int64    `protobuf:"varint,2,opt,name=max_results,json=maxResults,proto3" json:"max_results,omitempty"`
}

func (x *ThreadsListRequest) Reset() {
	*x = ThreadsListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadsListRequest) ProtoMessage() {}

func (x *ThreadsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadsListRequest.ProtoReflect.Descriptor instead.
func (*ThreadsListRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{36}
}

func (x *ThreadsListRequest) GetLabelIds() []string {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

func (x *ThreadsListRequest) GetMaxResults() int64 {
	if x != nil {
		return x.MaxResults
	}
	return 0
}

type ThreadsGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ThreadsGetRequest) Reset() {
	*x = ThreadsGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadsGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadsGetRequest) ProtoMessage() {}

func (x *ThreadsGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadsGetRequest.ProtoReflect.Descriptor instead.
func (*ThreadsGetRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{37}
}

func (x *ThreadsGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ThreadsDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ThreadsDeleteRequest) Reset() {
	*x = ThreadsDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadsDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadsDeleteRequest) ProtoMessage() {}

func (x *ThreadsDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadsDeleteRequest.ProtoReflect.Descriptor instead.
func (*ThreadsDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{38}
}

func (x *ThreadsDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ThreadsModifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ModifyThreadRequest *ModifyThreadRequest `protobuf:"bytes,2,opt,name=modify_thread_request,json=modifyThreadRequest,proto3" json:"modify_thread_request,omitempty"`
}

func (x *ThreadsModifyRequest) Reset() {
	*x = ThreadsModifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadsModifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadsModifyRequest) ProtoMessage() {}

func (x *ThreadsModifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadsModifyRequest.ProtoReflect.Descriptor instead.
func (*ThreadsModifyRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{39}
}

func (x *ThreadsModifyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ThreadsModifyRequest) GetModifyThreadRequest() *ModifyThreadRequest {
	if x != nil {
		return x.ModifyThreadRequest
	}
	return nil
}

type ThreadsTrashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ThreadsTrashRequest) Reset() {
	*x = ThreadsTrashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadsTrashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadsTrashRequest) ProtoMessage() {}

func (x *ThreadsTrashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadsTrashRequest.ProtoReflect.Descriptor instead.
func (*ThreadsTrashRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{40}
}

func (x *ThreadsTrashRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ThreadsUntrashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ThreadsUntrashRequest) Reset() {
	*x = ThreadsUntrashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadsUntrashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadsUntrashRequest) ProtoMessage() {}

func (x *ThreadsUntrashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fedemail_v1_fedemail_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadsUntrashRequest.ProtoReflect.Descriptor instead.
func (*ThreadsUntrashRequest) Descriptor() ([]byte, []int) {
	return file_proto_fedemail_v1_fedemail_proto_rawDescGZIP(), []int{41}
}

func (x *ThreadsUntrashRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_proto_fedemail_v1_fedemail_proto protoreflect.FileDescriptor

var file_proto_fedemail_v1_fedemail_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x08, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2e, 0x0a, 0x1a, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x7c, 0x0a, 0x1a, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x64, 0x64,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x64, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12,
	0x28, 0x0a, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x22, 0x44, 0x0a, 0x05, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2b, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x73, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x66, 0x65, 0x64,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x1c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53,
	0x45, 0x52, 0x10, 0x01, 0x22, 0x3d, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x64, 0x72,
	0x61, 0x66, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x65, 0x64,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x06, 0x64, 0x72, 0x61,
	0x66, 0x74, 0x73, 0x22, 0x3d, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x65, 0x64, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x22, 0x45, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66,
	0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x41, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x52, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x22, 0xf6, 0x01, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66,
	0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x61, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x49, 0x64, 0x22, 0xf2, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x35, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66,
	0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x22, 0x5e, 0x0a, 0x0f, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x3d, 0x0a, 0x11, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x64, 0x0a, 0x14, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x22,
	0x63, 0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x64, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x49, 0x64, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x06, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2d, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x22, 0x34, 0x0a, 0x11, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22,
	0x47, 0x0a, 0x13, 0x44, 0x72, 0x61, 0x66, 0x74, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x65,
	0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x0a, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x61, 0x77, 0x22, 0x45, 0x0a, 0x11, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a,
	0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x44, 0x72,
	0x61, 0x66, 0x74, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x61, 0x77, 0x22,
	0x22, 0x0a, 0x10, 0x44, 0x72, 0x61, 0x66, 0x74, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x57, 0x0a, 0x13, 0x44, 0x72, 0x61, 0x66, 0x74, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x0b, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x61, 0x77, 0x22, 0x25, 0x0a, 0x13,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x3c, 0x0a, 0x13, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x65, 0x64, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x22, 0x22, 0x0a, 0x10, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x13, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x65,
	0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x22, 0x25, 0x0a, 0x13, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x12, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x25, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x53, 0x0a, 0x13, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x61, 0x78, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x85, 0x01, 0x0a,
	0x1a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x67, 0x0a, 0x1d, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x1a, 0x62, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x1a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x67, 0x0a, 0x1d, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x65, 0x64,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x1a, 0x62, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x13,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72,
	0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x61, 0x77, 0x22, 0x24, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x27, 0x0a,
	0x15, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7d, 0x0a, 0x15, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x54, 0x0a, 0x16, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x14, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x54, 0x72, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x28, 0x0a,
	0x16, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x55, 0x6e, 0x74, 0x72, 0x61, 0x73, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x1d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x52, 0x0a, 0x12, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6d, 0x61, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x23, 0x0a, 0x11, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x26, 0x0a, 0x14, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x79, 0x0a, 0x14, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x51, 0x0a, 0x15, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x13, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x25, 0x0a, 0x13, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x54, 0x72, 0x61,
	0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x73, 0x55, 0x6e, 0x74, 0x72, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x32, 0xde, 0x0f, 0x0a, 0x08, 0x46, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x49, 0x0a, 0x0a, 0x44, 0x72, 0x61, 0x66, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e,
	0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x66, 0x65, 0x64,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0c, 0x44, 0x72,
	0x61, 0x66, 0x74, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x66, 0x65, 0x64,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x73, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x66, 0x65, 0x64, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0a,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x1b, 0x2e, 0x66, 0x65, 0x64,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x73, 0x53, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x09,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x73, 0x47, 0x65, 0x74, 0x12, 0x1a, 0x2e, 0x66, 0x65, 0x64, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x2e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0c, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x2e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x2e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x44, 0x72,
	0x61, 0x66, 0x74, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x66, 0x65, 0x64,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x73, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0a, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x66, 0x65, 0x64, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0c, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x66, 0x65, 0x64, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x09, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x47, 0x65, 0x74, 0x12, 0x1a, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0c, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x66, 0x65, 0x64, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x50, 0x61, 0x74, 0x63,
	0x68, 0x12, 0x1c, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0f, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1d, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x13, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x66, 0x65, 0x64,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x13, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x12, 0x24, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x42, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x53, 0x65, 0x6e,
	0x64, 0x12, 0x1d, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x47, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x11, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x66, 0x65, 0x64, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x1f, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x54, 0x72, 0x61, 0x73, 0x68, 0x12, 0x1e, 0x2e,
	0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x54, 0x72, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e,
	0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x55, 0x6e,
	0x74, 0x72, 0x61, 0x73, 0x68, 0x12, 0x20, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x55, 0x6e, 0x74, 0x72, 0x61, 0x73, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x16,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x47, 0x65, 0x74, 0x12, 0x27, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x66, 0x65,
	0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x65, 0x64, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x73, 0x47, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0d, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x66, 0x65, 0x64,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x1e, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0c, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x73, 0x54, 0x72, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x2e, 0x66, 0x65, 0x64, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x54, 0x72, 0x61, 0x73,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0e,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x55, 0x6e, 0x74, 0x72, 0x61, 0x73, 0x68, 0x12, 0x1f,
	0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x73, 0x55, 0x6e, 0x74, 0x72, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x22, 0x00, 0x42, 0x92, 0x01, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x65, 0x64, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x42, 0x0d, 0x46, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x2f, 0x66, 0x65, 0x64, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66,
	0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x46, 0x58, 0x58,
	0xaa, 0x02, 0x08, 0x46, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0xca, 0x02, 0x08, 0x46, 0x65,
	0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0xe2, 0x02, 0x14, 0x46, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x08,
	0x46, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_fedemail_v1_fedemail_proto_rawDescOnce sync.Once
	file_proto_fedemail_v1_fedemail_proto_rawDescData = file_proto_fedemail_v1_fedemail_proto_rawDesc
)

func file_proto_fedemail_v1_fedemail_proto_rawDescGZIP() []byte {
	file_proto_fedemail_v1_fedemail_proto_rawDescOnce.Do(func() {
		file_proto_fedemail_v1_fedemail_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_fedemail_v1_fedemail_proto_rawDescData)
	})
	return file_proto_fedemail_v1_fedemail_proto_rawDescData
}

var file_proto_fedemail_v1_fedemail_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_fedemail_v1_fedemail_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_proto_fedemail_v1_fedemail_proto_goTypes = []interface{}{
	(Label_Type)(0),                       // 0: fedemail.Label.Type
	(*BatchDeleteMessagesRequest)(nil),    // 1: fedemail.BatchDeleteMessagesRequest
	(*BatchModifyMessagesRequest)(nil),    // 2: fedemail.BatchModifyMessagesRequest
	(*Draft)(nil),                         // 3: fedemail.Draft
	(*Label)(nil),                         // 4: fedemail.Label
	(*ListDraftsResponse)(nil),            // 5: fedemail.ListDraftsResponse
	(*ListLabelsResponse)(nil),            // 6: fedemail.ListLabelsResponse
	(*ListMessagesResponse)(nil),          // 7: fedemail.ListMessagesResponse
	(*ListThreadsResponse)(nil),           // 8: fedemail.ListThreadsResponse
	(*Message)(nil),                       // 9: fedemail.Message
	(*MessagePart)(nil),                   // 10: fedemail.MessagePart
	(*MessagePartBody)(nil),               // 11: fedemail.MessagePartBody
	(*MessagePartHeader)(nil),             // 12: fedemail.MessagePartHeader
	(*ModifyMessageRequest)(nil),          // 13: fedemail.ModifyMessageRequest
	(*ModifyThreadRequest)(nil),           // 14: fedemail.ModifyThreadRequest
	(*Thread)(nil),                        // 15: fedemail.Thread
	(*DraftsListRequest)(nil),             // 16: fedemail.DraftsListRequest
	(*DraftsCreateRequest)(nil),           // 17: fedemail.DraftsCreateRequest
	(*DraftsSendRequest)(nil),             // 18: fedemail.DraftsSendRequest
	(*DraftsGetRequest)(nil),              // 19: fedemail.DraftsGetRequest
	(*DraftsUpdateRequest)(nil),           // 20: fedemail.DraftsUpdateRequest
	(*DraftsDeleteRequest)(nil),           // 21: fedemail.DraftsDeleteRequest
	(*LabelsCreateRequest)(nil),           // 22: fedemail.LabelsCreateRequest
	(*LabelsGetRequest)(nil),              // 23: fedemail.LabelsGetRequest
	(*LabelsUpdateRequest)(nil),           // 24: fedemail.LabelsUpdateRequest
	(*LabelsDeleteRequest)(nil),           // 25: fedemail.LabelsDeleteRequest
	(*LabelsPatchRequest)(nil),            // 26: fedemail.LabelsPatchRequest
	(*MessagesListRequest)(nil),           // 27: fedemail.MessagesListRequest
	(*MessagesBatchDeleteRequest)(nil),    // 28: fedemail.MessagesBatchDeleteRequest
	(*MessagesBatchModifyRequest)(nil),    // 29: fedemail.MessagesBatchModifyRequest
	(*MessagesSendRequest)(nil),           // 30: fedemail.MessagesSendRequest
	(*MessagesGetRequest)(nil),            // 31: fedemail.MessagesGetRequest
	(*MessagesDeleteRequest)(nil),         // 32: fedemail.MessagesDeleteRequest
	(*MessagesModifyRequest)(nil),         // 33: fedemail.MessagesModifyRequest
	(*MessagesTrashRequest)(nil),          // 34: fedemail.MessagesTrashRequest
	(*MessagesUntrashRequest)(nil),        // 35: fedemail.MessagesUntrashRequest
	(*MessagesAttachmentsGetRequest)(nil), // 36: fedemail.MessagesAttachmentsGetRequest
	(*ThreadsListRequest)(nil),            // 37: fedemail.ThreadsListRequest
	(*ThreadsGetRequest)(nil),             // 38: fedemail.ThreadsGetRequest
	(*ThreadsDeleteRequest)(nil),          // 39: fedemail.ThreadsDeleteRequest
	(*ThreadsModifyRequest)(nil),          // 40: fedemail.ThreadsModifyRequest
	(*ThreadsTrashRequest)(nil),           // 41: fedemail.ThreadsTrashRequest
	(*ThreadsUntrashRequest)(nil),         // 42: fedemail.ThreadsUntrashRequest
	(*emptypb.Empty)(nil),                 // 43: google.protobuf.Empty
}
var file_proto_fedemail_v1_fedemail_proto_depIdxs = []int32{
	9,  // 0: fedemail.Draft.message:type_name -> fedemail.Message
	0,  // 1: fedemail.Label.type:type_name -> fedemail.Label.Type
	3,  // 2: fedemail.ListDraftsResponse.drafts:type_name -> fedemail.Draft
	4,  // 3: fedemail.ListLabelsResponse.labels:type_name -> fedemail.Label
	9,  // 4: fedemail.ListMessagesResponse.messages:type_name -> fedemail.Message
	15, // 5: fedemail.ListThreadsResponse.threads:type_name -> fedemail.Thread
	10, // 6: fedemail.Message.payload:type_name -> fedemail.MessagePart
	11, // 7: fedemail.MessagePart.body:type_name -> fedemail.MessagePartBody
	12, // 8: fedemail.MessagePart.headers:type_name -> fedemail.MessagePartHeader
	10, // 9: fedemail.MessagePart.parts:type_name -> fedemail.MessagePart
	9,  // 10: fedemail.Thread.messages:type_name -> fedemail.Message
	3,  // 11: fedemail.DraftsCreateRequest.message_raw:type_name -> fedemail.Draft
	3,  // 12: fedemail.DraftsSendRequest.message_raw:type_name -> fedemail.Draft
	3,  // 13: fedemail.DraftsUpdateRequest.message_raw:type_name -> fedemail.Draft
	4,  // 14: fedemail.LabelsCreateRequest.label:type_name -> fedemail.Label
	4,  // 15: fedemail.LabelsUpdateRequest.label:type_name -> fedemail.Label
	4,  // 16: fedemail.LabelsPatchRequest.label:type_name -> fedemail.Label
	1,  // 17: fedemail.MessagesBatchDeleteRequest.batch_delete_messages_request:type_name -> fedemail.BatchDeleteMessagesRequest
	2,  // 18: fedemail.MessagesBatchModifyRequest.batch_modify_messages_request:type_name -> fedemail.BatchModifyMessagesRequest
	9,  // 19: fedemail.MessagesSendRequest.message_raw:type_name -> fedemail.Message
	13, // 20: fedemail.MessagesModifyRequest.modify_message_request:type_name -> fedemail.ModifyMessageRequest
	14, // 21: fedemail.ThreadsModifyRequest.modify_thread_request:type_name -> fedemail.ModifyThreadRequest
	16, // 22: fedemail.Fedemail.DraftsList:input_type -> fedemail.DraftsListRequest
	17, // 23: fedemail.Fedemail.DraftsCreate:input_type -> fedemail.DraftsCreateRequest
	18, // 24: fedemail.Fedemail.DraftsSend:input_type -> fedemail.DraftsSendRequest
	19, // 25: fedemail.Fedemail.DraftsGet:input_type -> fedemail.DraftsGetRequest
	20, // 26: fedemail.Fedemail.DraftsUpdate:input_type -> fedemail.DraftsUpdateRequest
	21, // 27: fedemail.Fedemail.DraftsDelete:input_type -> fedemail.DraftsDeleteRequest
	43, // 28: fedemail.Fedemail.LabelsList:input_type -> google.protobuf.Empty
	22, // 29: fedemail.Fedemail.LabelsCreate:input_type -> fedemail.LabelsCreateRequest
	23, // 30: fedemail.Fedemail.LabelsGet:input_type -> fedemail.LabelsGetRequest
	24, // 31: fedemail.Fedemail.LabelsUpdate:input_type -> fedemail.LabelsUpdateRequest
	25, // 32: fedemail.Fedemail.LabelsDelete:input_type -> fedemail.LabelsDeleteRequest
	26, // 33: fedemail.Fedemail.LabelsPatch:input_type -> fedemail.LabelsPatchRequest
	27, // 34: fedemail.Fedemail.MessagesList:input_type -> fedemail.MessagesListRequest
	28, // 35: fedemail.Fedemail.MessagesBatchDelete:input_type -> fedemail.MessagesBatchDeleteRequest
	29, // 36: fedemail.Fedemail.MessagesBatchModify:input_type -> fedemail.MessagesBatchModifyRequest
	30, // 37: fedemail.Fedemail.MessagesSend:input_type -> fedemail.MessagesSendRequest
	31, // 38: fedemail.Fedemail.MessagesGet:input_type -> fedemail.MessagesGetRequest
	32, // 39: fedemail.Fedemail.MessagesDelete:input_type -> fedemail.MessagesDeleteRequest
	33, // 40: fedemail.Fedemail.MessagesModify:input_type -> fedemail.MessagesModifyRequest
	34, // 41: fedemail.Fedemail.MessagesTrash:input_type -> fedemail.MessagesTrashRequest
	35, // 42: fedemail.Fedemail.MessagesUntrash:input_type -> fedemail.MessagesUntrashRequest
	36, // 43: fedemail.Fedemail.MessagesAttachmentsGet:input_type -> fedemail.MessagesAttachmentsGetRequest
	37, // 44: fedemail.Fedemail.ThreadsList:input_type -> fedemail.ThreadsListRequest
	38, // 45: fedemail.Fedemail.ThreadsGet:input_type -> fedemail.ThreadsGetRequest
	39, // 46: fedemail.Fedemail.ThreadsDelete:input_type -> fedemail.ThreadsDeleteRequest
	40, // 47: fedemail.Fedemail.ThreadsModify:input_type -> fedemail.ThreadsModifyRequest
	41, // 48: fedemail.Fedemail.ThreadsTrash:input_type -> fedemail.ThreadsTrashRequest
	42, // 49: fedemail.Fedemail.ThreadsUntrash:input_type -> fedemail.ThreadsUntrashRequest
	5,  // 50: fedemail.Fedemail.DraftsList:output_type -> fedemail.ListDraftsResponse
	3,  // 51: fedemail.Fedemail.DraftsCreate:output_type -> fedemail.Draft
	9,  // 52: fedemail.Fedemail.DraftsSend:output_type -> fedemail.Message
	3,  // 53: fedemail.Fedemail.DraftsGet:output_type -> fedemail.Draft
	3,  // 54: fedemail.Fedemail.DraftsUpdate:output_type -> fedemail.Draft
	43, // 55: fedemail.Fedemail.DraftsDelete:output_type -> google.protobuf.Empty
	6,  // 56: fedemail.Fedemail.LabelsList:output_type -> fedemail.ListLabelsResponse
	4,  // 57: fedemail.Fedemail.LabelsCreate:output_type -> fedemail.Label
	4,  // 58: fedemail.Fedemail.LabelsGet:output_type -> fedemail.Label
	4,  // 59: fedemail.Fedemail.LabelsUpdate:output_type -> fedemail.Label
	43, // 60: fedemail.Fedemail.LabelsDelete:output_type -> google.protobuf.Empty
	4,  // 61: fedemail.Fedemail.LabelsPatch:output_type -> fedemail.Label
	7,  // 62: fedemail.Fedemail.MessagesList:output_type -> fedemail.ListMessagesResponse
	43, // 63: fedemail.Fedemail.MessagesBatchDelete:output_type -> google.protobuf.Empty
	43, // 64: fedemail.Fedemail.MessagesBatchModify:output_type -> google.protobuf.Empty
	9,  // 65: fedemail.Fedemail.MessagesSend:output_type -> fedemail.Message
	9,  // 66: fedemail.Fedemail.MessagesGet:output_type -> fedemail.Message
	43, // 67: fedemail.Fedemail.MessagesDelete:output_type -> google.protobuf.Empty
	9,  // 68: fedemail.Fedemail.MessagesModify:output_type -> fedemail.Message
	9,  // 69: fedemail.Fedemail.MessagesTrash:output_type -> fedemail.Message
	9,  // 70: fedemail.Fedemail.MessagesUntrash:output_type -> fedemail.Message
	11, // 71: fedemail.Fedemail.MessagesAttachmentsGet:output_type -> fedemail.MessagePartBody
	8,  // 72: fedemail.Fedemail.ThreadsList:output_type -> fedemail.ListThreadsResponse
	15, // 73: fedemail.Fedemail.ThreadsGet:output_type -> fedemail.Thread
	43, // 74: fedemail.Fedemail.ThreadsDelete:output_type -> google.protobuf.Empty
	15, // 75: fedemail.Fedemail.ThreadsModify:output_type -> fedemail.Thread
	15, // 76: fedemail.Fedemail.ThreadsTrash:output_type -> fedemail.Thread
	15, // 77: fedemail.Fedemail.ThreadsUntrash:output_type -> fedemail.Thread
	50, // [50:78] is the sub-list for method output_type
	22, // [22:50] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_proto_fedemail_v1_fedemail_proto_init() }
func file_proto_fedemail_v1_fedemail_proto_init() {
	if File_proto_fedemail_v1_fedemail_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_fedemail_v1_fedemail_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchDeleteMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchModifyMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Draft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Label); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDraftsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLabelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListThreadsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagePart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagePartBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagePartHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyThreadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Thread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DraftsListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DraftsCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DraftsSendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DraftsGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DraftsUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DraftsDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelsCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelsGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelsUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelsDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelsPatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesBatchDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesBatchModifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesSendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesModifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesTrashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesUntrashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesAttachmentsGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadsListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadsGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadsDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadsModifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadsTrashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fedemail_v1_fedemail_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadsUntrashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_fedemail_v1_fedemail_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_fedemail_v1_fedemail_proto_goTypes,
		DependencyIndexes: file_proto_fedemail_v1_fedemail_proto_depIdxs,
		EnumInfos:         file_proto_fedemail_v1_fedemail_proto_enumTypes,
		MessageInfos:      file_proto_fedemail_v1_fedemail_proto_msgTypes,
	}.Build()
	File_proto_fedemail_v1_fedemail_proto = out.File
	file_proto_fedemail_v1_fedemail_proto_rawDesc = nil
	file_proto_fedemail_v1_fedemail_proto_goTypes = nil
	file_proto_fedemail_v1_fedemail_proto_depIdxs = nil
}
